#define key #p4#
#define velocity #p5#
#define version #p6#

opcode plug, a, jjo

iSourceModule, iNumberOfVersions, iVersion xin

midinoteonkey $key, $velocity

iDestinationModule = int ( p1 )

if iSourceModule == -1 then

SSourceModuleLocator sprintf "destination/%d", iDestinationModule

iSourceModule chnget SSourceModuleLocator

endif

if iNumberOfVersions == -1 then

SNumberOfVersionsLocator sprintf "Versions/%d", iSourceModule

iNumberOfVersions chnget SNumberOfVersionsLocator

if iNumberOfVersions == 0 then

iNumberOfVersions = 1
iVersion = $version

endif

endif

aOutput subinstr iSourceModule, $key, $velocity, $version

aOutput = aOutput / iNumberOfVersions

iVersion += 1

if iVersion < iNumberOfVersions then

aRemainingVersionsOutput plug iSourceModule, iNumberOfVersions, iVersion

aOutput += aRemainingVersionsOutput

endif

SdestinationModule nstrstr iDestinationModule
SSourceModule nstrstr iSourceModule

xout aOutput

endop
